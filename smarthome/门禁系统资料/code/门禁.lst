__text_start:
__start:
    0032 E5CF      LDI	R28,0x5F
    0033 E0D4      LDI	R29,4
    0034 BFCD      OUT	0x3D,R28
    0035 BFDE      OUT	0x3E,R29
    0036 51C0      SUBI	R28,0x10
    0037 40D0      SBCI	R29,0
    0038 EA0A      LDI	R16,0xAA
    0039 8308      STD	Y+0,R16
    003A 2400      CLR	R0
    003B E6EF      LDI	R30,0x6F
    003C E0F0      LDI	R31,0
    003D E010      LDI	R17,0
    003E 36EF      CPI	R30,0x6F
    003F 07F1      CPC	R31,R17
    0040 F011      BEQ	0x0043
    0041 9201      ST	R0,Z+
    0042 CFFB      RJMP	0x003E
    0043 8300      STD	Z+0,R16
    0044 E5E4      LDI	R30,0x54
    0045 E0F0      LDI	R31,0
    0046 E6A0      LDI	R26,0x60
    0047 E0B0      LDI	R27,0
    0048 E010      LDI	R17,0
    0049 36E3      CPI	R30,0x63
    004A 07F1      CPC	R31,R17
    004B F021      BEQ	0x0050
    004C 95C8      LPM
    004D 9631      ADIW	R30,1
    004E 920D      ST	R0,X+
    004F CFF9      RJMP	0x0049
    0050 940E007D  CALL	_main
_exit:
    0052 CFFF      RJMP	_exit
FILE: D:\yang-home-shanghai\smarthome\门禁系统资料\code\uart.c
(0001) #include<iom16v.h>
(0002) #include <macros.h>
(0003) 
(0004) #include "uart.h"
(0005) 
(0006) //uart0 init.
(0007) void uart0_init(void)
(0008) {
(0009)  UCSRB = 0x00;                //禁止UART发送和接收
_uart0_init:
    0053 2422      CLR	R2
    0054 B82A      OUT	0x0A,R2
(0010)  UCSRA = 0x02;				  //倍速
    0055 E082      LDI	R24,2
    0056 B98B      OUT	0x0B,R24
(0011)  UCSRC = 0x06;				  //8位数据
    0057 E086      LDI	R24,6
    0058 BD80      OUT	0x20,R24
(0012)  UBRRL = 0x67;				  //9600bps
    0059 E687      LDI	R24,0x67
    005A B989      OUT	0x09,R24
(0013)  UBRRH = 0x00;
    005B BC20      OUT	0x20,R2
(0014)  UCSRB = 0x18;
    005C E188      LDI	R24,0x18
    005D B98A      OUT	0x0A,R24
    005E 9508      RET
(0015) }
(0016) //uart0 send char.
(0017) void uart0_send(unsigned char i)
(0018) {
(0019)  while(!(UCSRA&(1<<UDRE)));
_uart0_send:
  i                    --> R16
    005F 9B5D      SBIS	0x0B,5
    0060 CFFE      RJMP	_uart0_send
(0020)  UDR = i;
    0061 B90C      OUT	0x0C,R16
    0062 9508      RET
(0021) }
(0022) //uart0 receive.
(0023) unsigned char uart0_receive(void)
(0024) {
(0025)  while(!(UCSRA&(1<<RXC)));
_uart0_receive:
    0063 9B5F      SBIS	0x0B,7
    0064 CFFE      RJMP	_uart0_receive
(0026)  return UDR;
    0065 B10C      IN	R16,0x0C
    0066 9508      RET
_uart0_send_string:
  string               --> R20
    0067 940E00BF  CALL	push_gset1
    0069 01A8      MOVW	R20,R16
(0027) }
(0028) //uart0 send string
(0029) void uart0_send_string(char* string)
(0030) {
    006A C005      RJMP	0x0070
(0031)  while(*string)
(0032)  {
(0033)   uart0_send(*string);
    006B 01FA      MOVW	R30,R20
    006C 8100      LDD	R16,Z+0
    006D DFF1      RCALL	_uart0_send
(0034)   string++;
    006E 5F4F      SUBI	R20,0xFF
    006F 4F5F      SBCI	R21,0xFF
    0070 01FA      MOVW	R30,R20
    0071 8020      LDD	R2,Z+0
    0072 2022      TST	R2
    0073 F7B9      BNE	0x006B
    0074 940E00C2  CALL	pop_gset1
    0076 9508      RET
FILE: D:\yang-home-shanghai\smarthome\门禁系统资料\code\init.c
(0001) #include<iom16v.h>
(0002) #include <macros.h>
(0003) 
(0004) void port_init(void)
(0005) {
(0006)  //PORTA = 0xff;
(0007)  //DDRA = 0x00;
(0008)  //PORTB = 0xff;
(0009)  DDRB = 0xff;
_port_init:
    0077 EF8F      LDI	R24,0xFF
    0078 BB87      OUT	0x17,R24
(0010)  //PORTC = 0xff;
(0011)  //DDRC = 0x00;
(0012)  PORTD = 0xff;
    0079 BB82      OUT	0x12,R24
(0013)  DDRD = 0x00;
    007A 2422      CLR	R2
    007B BA21      OUT	0x11,R2
    007C 9508      RET
FILE: D:\yang-home-shanghai\smarthome\门禁系统资料\code\main.c
(0001) #include <stdio.h>
(0002) #include <string.h>
(0003) #include <stdlib.h>
(0004) #include<iom16v.h>
(0005) #include <macros.h>
(0006) 
(0007) #include "init.h"
(0008) #include "uart.h"
(0009) #include "wg26.h"
(0010) #include "util.h"
(0011) 
(0012) extern unsigned char interr;
(0013) 
(0014) int main(void)
(0015) {
(0016)  port_init();
_main:
    007D 940E0077  CALL	_port_init
(0017)  uart0_init();
    007F 940E0053  CALL	_uart0_init
(0018)  init_interrupt1();
    0081 940E0095  CALL	_init_interrupt1
(0019)  uart0_send_string("uart send...\n");
    0083 E600      LDI	R16,0x60
    0084 E010      LDI	R17,0
    0085 940E0067  CALL	_uart0_send_string
(0020)  PORTB = 0xff;
    0087 EF8F      LDI	R24,0xFF
    0088 BB88      OUT	0x18,R24
    0089 C007      RJMP	0x0091
(0021)  while(1)
(0022)  {
(0023)   //uart0_send_string("uart send testing...\n");
(0024)   //PORTB = 0xff;
(0025)   if(interr)
    008A 9020006E  LDS	R2,interr
    008C 2022      TST	R2
    008D F011      BEQ	0x0090
(0026)   {
(0027)     //delay_ms(500);
(0028)     PORTB = 0x00;
    008E 2422      CLR	R2
    008F BA28      OUT	0x18,R2
(0029)   }
(0030)   SEI();
    0090 9478      BSET	7
    0091 CFF8      RJMP	0x008A
(0031)   //delay_ms(500);
(0032)  }
(0033)  return 0;
    0092 2700      CLR	R16
    0093 2711      CLR	R17
    0094 9508      RET
FILE: D:\yang-home-shanghai\smarthome\门禁系统资料\code\wg26.c
(0001) #include<iom16v.h>
(0002) #include <macros.h>
(0003) 
(0004) #include "uart.h"
(0005) 
(0006) void init_interrupt1(void)
(0007) {
(0008)  //DDRD = 0x00;
(0009)  SREG = 0x80;
_init_interrupt1:
    0095 E880      LDI	R24,0x80
    0096 BF8F      OUT	0x3F,R24
(0010)  GICR = 0x80;
    0097 BF8B      OUT	0x3B,R24
(0011)  MCUCR = 0x08; //INT1下降沿触发。
    0098 E088      LDI	R24,0x8
    0099 BF85      OUT	0x35,R24
(0012)  return;
    009A 9508      RET
(0013) }
(0014) 
(0015) unsigned char interr = 0;
(0016) 
(0017) #pragma interrupt_hander intsb:3
(0018) void intsb(void)
(0019) {
(0020)  //uart0_send_string("int1 enable.\n");
(0021)  interr = 1;
_intsb:
    009B E081      LDI	R24,1
    009C 9380006E  STS	interr,R24
    009E 9508      RET
_delay_ms:
  i                    --> R20
  j                    --> R22
  ms                   --> R16
    009F 940E00BD  CALL	push_gset2
FILE: D:\yang-home-shanghai\smarthome\门禁系统资料\code\util.c
(0001) #include <stdio.h>
(0002) #include <string.h>
(0003) #include <stdlib.h>
(0004) 
(0005) #include "util.h"
(0006) 
(0007) void delay_ms(int ms)
(0008) {
(0009)     int i,j;			
(0010)     for(i=0;i<ms;i++)
    00A1 2744      CLR	R20
    00A2 2755      CLR	R21
    00A3 C00A      RJMP	0x00AE
(0011)     {
(0012)        for(j=0;j<1140;j++)
FILE: <library>
    00A4 2766      CLR	R22
    00A5 2777      CLR	R23
    00A6 5F6F      SUBI	R22,0xFF
    00A7 4F7F      SBCI	R23,0xFF
    00A8 3764      CPI	R22,0x74
    00A9 E0E4      LDI	R30,4
    00AA 077E      CPC	R23,R30
    00AB F3D4      BLT	0x00A6
    00AC 5F4F      SUBI	R20,0xFF
    00AD 4F5F      SBCI	R21,0xFF
    00AE 1740      CP	R20,R16
    00AF 0751      CPC	R21,R17
    00B0 F39C      BLT	0x00A4
    00B1 940E00B4  CALL	pop_gset2
    00B3 9508      RET
pop_gset2:
    00B4 E0E2      LDI	R30,2
    00B5 940C00C3  JMP	pop
push_gset5:
    00B7 92FA      ST	R15,-Y
    00B8 92EA      ST	R14,-Y
push_gset4:
    00B9 92DA      ST	R13,-Y
    00BA 92CA      ST	R12,-Y
push_gset3:
    00BB 92BA      ST	R11,-Y
    00BC 92AA      ST	R10,-Y
push_gset2:
    00BD 937A      ST	R23,-Y
    00BE 936A      ST	R22,-Y
push_gset1:
    00BF 935A      ST	R21,-Y
    00C0 934A      ST	R20,-Y
    00C1 9508      RET
pop_gset1:
    00C2 E0E1      LDI	R30,1
pop:
    00C3 9149      LD	R20,Y+
    00C4 9159      LD	R21,Y+
    00C5 FDE0      SBRC	R30,0
    00C6 9508      RET
    00C7 9169      LD	R22,Y+
    00C8 9179      LD	R23,Y+
    00C9 FDE1      SBRC	R30,1
    00CA 9508      RET
    00CB 90A9      LD	R10,Y+
    00CC 90B9      LD	R11,Y+
    00CD FDE2      SBRC	R30,2
    00CE 9508      RET
    00CF 90C9      LD	R12,Y+
    00D0 90D9      LD	R13,Y+
    00D1 FDE3      SBRC	R30,3
    00D2 9508      RET
    00D3 90E9      LD	R14,Y+
    00D4 90F9      LD	R15,Y+
    00D5 9508      RET
